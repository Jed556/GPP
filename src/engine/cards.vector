#ifndef BLACKJACK_H
#define BLACKJACK_H

#include <algorithm>
#include <array>
#include <iostream>
#include <random>
#include <stdexcept>
#include <string>
#include <vector>

class Deck {
   private:
    std::vector<std::string> suits = {"S", "H", "D", "C"};
    std::vector<std::string> faces = {"A", "2", "3", "4", "5", "6", "7", "8", "9", "10", "J", "Q", "K"};
    std::vector<std::string> cards;
    size_t size = 0;

   public:
    Deck();
    ~Deck();
    void setCard(int index, std::string value);
    void setNull(int index);
    std::string getCard(int index) const;
    std::vector<std::string> getDeck() const;
    int getDeckSize() const;
    size_t getSize() const;
    void shuffle();
    std::string printCards(bool print) const;
};

class Hand {
   private:
    std::vector<std::string> cards;
    int numCards = 0;
    size_t size = 0;

   public:
    Hand(size_t size);
    ~Hand();
    void setCard(int index, std::string value);
    void setNull(int index);
    std::string getCard(int index) const;
    std::vector<std::string> getHand() const;
    int getValue(int index) const;
    std::array<int, 2> getTotalValue() const;
    int getHandSize() const;
    size_t getSize() const;
    void drawCards(Deck obj, int numDraws);
    std::string printCards(bool print) const;
};

#endif  // BLACKJACK_H